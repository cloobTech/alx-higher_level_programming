===============================================================
How to use the 'add_integer' function from 0-add_integer module
===============================================================



>>> add_integer = __import__('0-add_integer').add_integer

---------------------------------------------------------------
>>> add_integer(2, 3)
5

NB: The function can add two integers and return the result
-----------------------------------------------------------------
>>> add_integer(4.0, 5.0)
9

NB: floats works just fine and their results are converted to int
-----------------------------------------------------------------
>>> add_integer(1)
99
>>> add_integer(-4)
94

NB: one digit can be passed - the second parameter has a default value (98)
-----------------------------------------------------------------
>>> add_integer(-2, -2)
-4
>>> add_integer(-3, 6.0)
3

NB: Negative or mixed values can be passed as arguments
-----------------------------------------------------------------
=====================
Error Handling
=====================

>>> add_integer(4, "School")
Traceback (most recent call last):
TypeError: b must be an integer

>>> add_integer("Alx", 7)
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer()
Traceback (most recent call last):
    ...
TypeError: add_integer() missing 1 required positional argument: 'a'


>>> add_integer(float('inf'))
Traceback (most recent call last):
OverflowError: cannot convert float infinity to integer


>>> add_integer(2, float('inf'))
Traceback (most recent call last):
OverflowError: cannot convert float infinity to integer

NB: Raises a TypeError if either value 'a' or 'b' is not an int or float
---------------------------------------------------------------
